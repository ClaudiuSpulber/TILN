individual, selfReport, dyadic, objective/facts, heteroevaluation, teams/network

Materials and procedure
 self-report
Table 1

Personality
    self-report
Academic performance

Keywords
    self-report
Abstract

Measures
    self-report
Results

//CODE//
string Procedure(string s) {

	string temp = "";
	std::regex a1("\\b((self-report))");
	std::regex a2("\\b((individual))");
	std::regex a3("\\b((dyadic))");
	std::regex a4("\\b((objective/facts))");
	std::regex a5("\\b((heteroevaluation))");
	std::regex a6("\\b((teams/network))");
	temp = extractText(s, "Materials and procedure", "Table 1");

	if (extractText(s, "Materials and procedure", "Table 1") != "") {
		if (getTextReg(temp, a1) != "")
			return getTextReg(temp, a1);
		if (getTextReg(temp, a2) != "")
			return getTextReg(temp, a2);
		if (getTextReg(temp, a3) != "")
			return getTextReg(temp, a3);
		if (getTextReg(temp, a4) != "")
			return getTextReg(temp, a4);
		if (getTextReg(temp, a5) != "")
			return getTextReg(temp, a5);
		if (getTextReg(temp, a6) != "")
			return getTextReg(temp, a6);
	}

	if (extractText(s, "Personality", "Academic performance") != "") {
		if (getTextReg(temp, a1) != "")
			return getTextReg(temp, a1);
		if (getTextReg(temp, a2) != "")
			return getTextReg(temp, a2);
		if (getTextReg(temp, a3) != "")
			return getTextReg(temp, a3);
		if (getTextReg(temp, a4) != "")
			return getTextReg(temp, a4);
		if (getTextReg(temp, a5) != "")
			return getTextReg(temp, a5);
		if (getTextReg(temp, a6) != "")
			return getTextReg(temp, a6);
	}

	if (extractText(s, "Keywords", "Abstract") != "") {
		if (getTextReg(temp, a1) != "")
			return getTextReg(temp, a1);
		if (getTextReg(temp, a2) != "")
			return getTextReg(temp, a2);
		if (getTextReg(temp, a3) != "")
			return getTextReg(temp, a3);
		if (getTextReg(temp, a4) != "")
			return getTextReg(temp, a4);
		if (getTextReg(temp, a5) != "")
			return getTextReg(temp, a5);
		if (getTextReg(temp, a6) != "")
			return getTextReg(temp, a6);
	}

	if (extractText(s, "Measures", "Results") != "") {
		if (getTextReg(temp, a1) != "")
			return getTextReg(temp, a1);
		if (getTextReg(temp, a2) != "")
			return getTextReg(temp, a2);
		if (getTextReg(temp, a3) != "")
			return getTextReg(temp, a3);
		if (getTextReg(temp, a4) != "")
			return getTextReg(temp, a4);
		if (getTextReg(temp, a5) != "")
			return getTextReg(temp, a5);
		if (getTextReg(temp, a6) != "")
			return getTextReg(temp, a6);
	}

}
